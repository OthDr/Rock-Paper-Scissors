/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * connection.java
 *
 * Created on 5 juin 2012, 00:37:47
 */
package rmi;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author USER
 */
public class connection extends javax.swing.JFrame {
    
    
    public static int owner, opponent, ownerScore=0, opponentScore=0;
    public static char myAction;
    public static boolean finished = false;
    /**
     * Creates new form connection
     */
    public connection() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        scoreLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Scissorsbtn = new javax.swing.JButton();
        Paperbtn = new javax.swing.JButton();
        Resultbtn = new javax.swing.JButton();
        waitLabel = new javax.swing.JLabel();
        Rockbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(153, 153, 255));

        scoreLabel.setFont(new java.awt.Font("Showcard Gothic", 0, 32)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(153, 153, 255));
        scoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scoreLabel.setText("Choose Your Move");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTextField1.setText("127.0.0.1");

        jTextField2.setText("2011");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("ADRESSE IP");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("NUMERO DE PORT");

        Scissorsbtn.setBackground(new java.awt.Color(153, 153, 255));
        Scissorsbtn.setForeground(new java.awt.Color(255, 255, 255));
        Scissorsbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rmi/scissors.png"))); // NOI18N
        Scissorsbtn.setText("Scissors");
        Scissorsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScissorsbtnActionPerformed(evt);
            }
        });

        Paperbtn.setBackground(new java.awt.Color(153, 153, 255));
        Paperbtn.setForeground(new java.awt.Color(255, 255, 255));
        Paperbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rmi/paper.png"))); // NOI18N
        Paperbtn.setText("Paper");
        Paperbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaperbtnActionPerformed(evt);
            }
        });

        Resultbtn.setBackground(new java.awt.Color(153, 153, 255));
        Resultbtn.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        Resultbtn.setForeground(new java.awt.Color(255, 255, 255));
        Resultbtn.setText("MOVE");
        Resultbtn.setEnabled(false);
        Resultbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultbtnActionPerformed(evt);
            }
        });

        waitLabel.setForeground(new java.awt.Color(255, 255, 255));
        waitLabel.setText("Wait..");

        Rockbtn.setBackground(new java.awt.Color(153, 153, 255));
        Rockbtn.setForeground(new java.awt.Color(255, 255, 255));
        Rockbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rmi/rock.png"))); // NOI18N
        Rockbtn.setText("Rock");
        Rockbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RockbtnMouseEntered(evt);
            }
        });
        Rockbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RockbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(waitLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Resultbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Scissorsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(Paperbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(Rockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Scissorsbtn)
                    .addComponent(Paperbtn)
                    .addComponent(Rockbtn))
                .addGap(27, 27, 27)
                .addComponent(Resultbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(waitLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static String adrs;
    public static String prt;
    public static int taille;
    private void RockbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RockbtnActionPerformed

        adrs = jTextField1.getText();
        prt = jTextField2.getText();

        int port = Integer.parseInt(prt);

        char Action = 'r';
        myAction=Action;

        if ((port > 1024)) {

            System.out.println(" " + Action + " clicked ");

            client player = new client();

            try {
                //
                char valeur = player.exe_client(Action, adrs, prt);

                System.out.println("waaaaaaaaaaaaw");

                System.out.println("resultat est " + valeur);
                
                owner = Action;

                Rockbtn.setEnabled(false);
                Scissorsbtn.setEnabled(false);
                Paperbtn.setEnabled(false);
                Resultbtn.setEnabled(true);
                //result.jLabel1.setText(String.valueOf( v3));

                //*************************************************    jTextField5.setText("" + valeur);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(new JFrame(), "IL Y A UNE ERREUR OU BIEN LE SERVEUR N'EST PAS CONNECTER ");
                System.out.println("w  " + e);
                Logger.getLogger(connection.class.getName()).log(Level.SEVERE, null, e);
            }

            /*connection a = new connection();
            a.setVisible(true);*/
        } else {

            JOptionPane.showMessageDialog(new JFrame(), "LE NUMERO DE PORT DOIT ETRE SUPERIEUR A 1024");
            connection a = new connection();
            a.setVisible(true);
        }
        // this.dispose();
}//GEN-LAST:event_RockbtnActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void ScissorsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScissorsbtnActionPerformed
        adrs = jTextField1.getText();
        prt = jTextField2.getText();

        int port = Integer.parseInt(prt);

        char Action = 's';
        myAction=Action;
        if ((port > 1024)) {

            System.out.println(" " + Action + " clicked ");

            client player = new client();

            try {
                //
                char valeur = player.exe_client(Action, adrs, prt);

                System.out.println("waaaaaaaaaaaaw");

                System.out.println("resultat est " + valeur);

                owner = Action;
                
                Rockbtn.setEnabled(false);
                Scissorsbtn.setEnabled(false);
                Paperbtn.setEnabled(false);
                Resultbtn.setEnabled(true);
                //result.jLabel1.setText(String.valueOf( v3));

                //*************************************************    jTextField5.setText("" + valeur);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(new JFrame(), "IL Y A UNE ERREUR OU BIEN LE SERVEUR N'EST PAS CONNECTER ");
                System.out.println("w  " + e);
                Logger.getLogger(connection.class.getName()).log(Level.SEVERE, null, e);
            }

            /*connection a = new connection();
            a.setVisible(true);*/
        } else {

            JOptionPane.showMessageDialog(new JFrame(), "LE NUMERO DE PORT DOIT ETRE SUPERIEUR A 1024");
            connection a = new connection();
            a.setVisible(true);
        }
    }//GEN-LAST:event_ScissorsbtnActionPerformed

    private void PaperbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaperbtnActionPerformed
        adrs = jTextField1.getText();
        prt = jTextField2.getText();

        int port = Integer.parseInt(prt);

        char Action = 'p';
        myAction=Action;

        if ((port > 1024)) {

            System.out.println(" " + Action + " clicked ");

            client player = new client();

            try {
                //
                char valeur = player.exe_client(Action, adrs, prt);

                System.out.println("waaaaaaaaaaaaw");

                System.out.println("resultat est " + valeur);
                
                owner = Action;

                Rockbtn.setEnabled(false);
                Scissorsbtn.setEnabled(false);
                Paperbtn.setEnabled(false);
                Resultbtn.setEnabled(true);
                //result.jLabel1.setText(String.valueOf( v3));

                //*************************************************    jTextField5.setText("" + valeur);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(new JFrame(), "IL Y A UNE ERREUR OU BIEN LE SERVEUR N'EST PAS CONNECTER ");
                System.out.println("w  " + e);
                Logger.getLogger(connection.class.getName()).log(Level.SEVERE, null, e);
            }

            /*connection a = new connection();
            a.setVisible(true);*/
        } else {

            JOptionPane.showMessageDialog(new JFrame(), "LE NUMERO DE PORT DOIT ETRE SUPERIEUR A 1024");
            connection a = new connection();
            a.setVisible(true);
        }
    }//GEN-LAST:event_PaperbtnActionPerformed

    private void ResultbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResultbtnActionPerformed
        adrs = jTextField1.getText();
        prt = jTextField2.getText();
        char winner = '0';
        
        

        int port = Integer.parseInt(prt);
        client ab = new client();

        System.out.println("jbutton1 clicked");
        try {
            //
            winner = ab.exe_cli_somme(' ', adrs, prt);

            

            System.out.println("winner is " + winner);
            if(winner != '0'){
                waitLabel.setForeground(Color.black);
                waitLabel.setText("winner is " + winner);
                
                if(owner == winner){
                    ownerScore ++;
                    scoreLabel.setText("You: "+ownerScore+" VS "+"Opponent: "+opponentScore);
                    Resultbtn.setEnabled(false);
                    scoreLabel.setForeground(Color.green);
                    finished = true;
                    
                }else if(winner == '1'){
                    scoreLabel.setText("You: "+ownerScore+" VS "+"Opponent: "+opponentScore);
                    Resultbtn.setEnabled(false);
                    finished = true;
                    
                }
                else{
                    opponentScore ++;
                    scoreLabel.setText("You: "+ownerScore+" VS "+"Opponent: "+opponentScore);
                    Resultbtn.setEnabled(false);                    
                    scoreLabel.setForeground(Color.red);
                    finished = true;
                }
                
                Rockbtn.setEnabled(true);
                Scissorsbtn.setEnabled(true);
                Paperbtn.setEnabled(true);
                
                
            }else {
                //waitLabel.setForeground(Color.black);
                //waitLabel.setText("wait for other player");
                scoreLabel.setText("wait for the other player");
            }

            

        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(), "IL Y A UNE ERREUR OU BIEN LE SERVEUR N'EST PAS CONNECTER ");
            System.out.println("w  " + e);
            Logger.getLogger(connection.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_ResultbtnActionPerformed
    
    private void RockbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RockbtnMouseEntered
        this.setBackground(Color.BLUE);
    }//GEN-LAST:event_RockbtnMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new connection().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Paperbtn;
    private javax.swing.JButton Resultbtn;
    private javax.swing.JButton Rockbtn;
    private javax.swing.JButton Scissorsbtn;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel waitLabel;
    // End of variables declaration//GEN-END:variables
}
